/*------------------------------------------------------------------
 * sl2html.cmd :
 *------------------------------------------------------------------
 * 95/10/06 originally by Patrick J. Mueller
 *------------------------------------------------------------------*/

parse arg parms

if (parms = "?") then
   Usage()

/*------------------------------------------------------------------
 * process options
 *------------------------------------------------------------------*/
optPages    = 1
optLinks    = 1
optFontSize = 5
optLinkPrev = "l_hand.gif"
optLinkNext = "r_hand.gif"
optFileBase = "sl"

/*------------------------------------------------------------------
 * process parameters
 *------------------------------------------------------------------*/
parse var parms iFile .

if ("" = stream(iFile,"C","QUERY EXISTS")) then
   do
   say "Input file '"iFile"' not found."
   exit
   end

slide.0    = 0
address.0 = 0

in = ""
do while (eof(iFile) = 0)
   line  = getNextLine(iFile)
   sLine = space(line)
   char1 = substr(sLine,1,1)
   word1 = translate(word(sLine,1))
   rest  = subword(sLine,2)

   if (char1 = ":") then
      do
      if (word1 = ":ADDRESS") then
         do
         in = "address"
         end

      else if (word1 = ":SLIDE") then
         do
         in = "slide"
         o = slide.0 + 1
         slide.0 = o
         slide.o.0 = 0
         slide.o = rest
         end

      iterate
      end

   if (in = "address") then
      do
      o = address.0 + 1
      address.0 = o
      address.o = line
      iterate
      end

   if (in = "slide") then
      do
      o1 = slide.0
      o2 = slide.o1.0 + 1
      slide.o1.0 = o2
      slide.o1.o2 = line
      iterate
      end

end

/*------------------------------------------------------------------
 * write each file
 *------------------------------------------------------------------*/
do i = 1 to slide.0
   oFile.i = optFileBase || right(i,2,"0") || ".htm"
end

do i = 1 to slide.0
   say "creating file" oFile.i

   ib = i - 1
   ia = i + 1

   leftRef = ""
   riteRef = ""

   if (ib > 0) then
      leftRef = '<a href="'oFile.ib'"><img src="'optLinkPrev'"></a>'

   if (ia <= slide.0) then
      riteRef = '<a href="'oFile.ia'"><img src="'optLinkNext'"></a>'

   "@erase" oFile.i "1>nul 2>nul"

   rc = lineout(oFile.i,'<!--  Warning Warning Warning Warning Warning Warning Warning Warning  -->')
   rc = lineout(oFile.i,'<!--     Warning Warning Warning Warning Warning Warning Warning       -->')
   rc = lineout(oFile.i,'<!--  Warning Warning Warning Warning Warning Warning Warning Warning  -->')
   rc = lineout(oFile.i,' ')
   rc = lineout(oFile.i,'<!--    Do not edit this file!  It was generated from a template       -->')
   rc = lineout(oFile.i,' ')
   rc = lineout(oFile.i,'<!--  Warning Warning Warning Warning Warning Warning Warning Warning  -->')
   rc = lineout(oFile.i,'<!--     Warning Warning Warning Warning Warning Warning Warning       -->')
   rc = lineout(oFile.i,'<!--  Warning Warning Warning Warning Warning Warning Warning Warning  -->')
   rc = lineout(oFile.i,' ')
   rc = lineout(oFile.i,'<html>')
   rc = lineout(oFile.i,'<head>')
   rc = lineout(oFile.i,'<title>'slide.i'</title>')
   rc = lineout(oFile.i,'</head>')
   rc = lineout(oFile.i,'<body>')
   rc = lineout(oFile.i,'<h1>'slide.i'</h1>')

   if optLinks then
      do
      rc = lineout(oFile.i,'<table width="100%">')
      rc = lineout(oFile.i,'<tr>')
      rc = lineout(oFile.i,'<td align=left>'leftRef'</td>')
      rc = lineout(oFile.i,'<td align=right>'riteRef'</td>')
      rc = lineout(oFile.i,'</tr>')
      rc = lineout(oFile.i,'</table>')
      end

   rc = lineout(oFile.i,'<hr>')
   rc = lineout(oFile.i,'<font size="'optFontSize'">')

   do j = 1 to slide.i.0
      rc = lineout(oFile.i,slide.i.j)
   end

   rc = lineout(oFile.i,'</font>')


   if optPages then
      do
      rc = lineout(oFile.i,'<table width="100%">')
      rc = lineout(oFile.i,'<tr>')
      rc = lineout(oFile.i,'<td align=right>Page' i'</td>')
      rc = lineout(oFile.i,'</tr>')
      rc = lineout(oFile.i,'</table>')
      rc = lineout(oFile.i)
      end

   do j = 1 to address.0
      rc = lineout(oFile.i,address.j)
   end

   rc = lineout(oFile.i)
end

/*------------------------------------------------------------------
 * write toc.htm file
 *------------------------------------------------------------------*/
oFile = "toc.htm"
"@erase" oFile "1>nul 2>nul"
rc = lineout(oFile,"<html>")
rc = lineout(oFile,"<head>")
rc = lineout(oFile,"<title>Table of contents</title>")
rc = lineout(oFile,"</head>")
rc = lineout(oFile,"<body>")

do i = 1 to slide.0
   ref = '<a href="'oFile.i'">'
   rc = lineout(oFile,'<p>'ref || slide.i'</a>')
end

rc = lineout(oFile,"</body>")
rc = lineout(oFile,"</html>")


exit

/*------------------------------------------------------------------
 * get next line
 *------------------------------------------------------------------*/
getNextLine: procedure expose optPages optLinks optLinkPrev optLinkNext optFileBase optFontSize

   iFile = arg(1)

   if (chars(iFile) <= 0) then
      return ""

   line = linein(iFile)
   sLine = space(line)

   char1 = substr(sLine,1,1)
   if (char1 <> ":") then
      return line

   word1 = translate(word(sLine,1))
   word2 = word(sLine,2)

   if (word1 = ":TITLE") | (word1 = ":SLIDE") | (word1 = ":ADDRESS") then
      return sLine

   if (word1 = ":OUTPUTFILE") then optFileBase = word2
   if (word1 = ":PAGES")      then optPages    = word2
   if (word1 = ":LINKS")      then optLinks    = word2
   if (word1 = ":PREVLINK")   then optPrevLink = word2
   if (word1 = ":NEXTLINK")   then optNextLink = word2
   if (word1 = ":FONTSIZE")   then optFontSize = word2

   return ""

/*------------------------------------------------------------------
 * end of file?
 *------------------------------------------------------------------*/
eof: procedure
   iFile = arg(1)

   return (chars(iFile) <= 0)

/*------------------------------------------------------------------
 * getTextOfFile
 *------------------------------------------------------------------*/
getTextOfFile: procedure
   fileName = arg(1)

   bytes = stream(fileName,"C","QUERY SIZE")
   if (bytes = "") | (bytes = 0) then
      return ""

   text = charin(fileName,,bytes)
   rc   = stream(fileName,"C","CLOSE")

   return text

/*------------------------------------------------------------------
 * some simple help
 *------------------------------------------------------------------*/
Usage: procedure
   parse source . . me .
   parse value filespec("name",me) with me "." .

   say "usage:"
   say "   " me "<options> <tocFile>"
   say "is used to create HTML files from SLHTML files."
   say
   say "where:"
   say "   tocFile - the table of contents slide.  This file contains"
   say "             lines of the form {fileName}.  The fileName"
   say "             'trailer' can be used to specify a common trailer"
   say "             for each generated page, the name of the trailer file"
   say "             should follow the token 'trailer'. Default is 'toc.lst'"
   say
   say "   options -"
   say "      -p{+|-}      indicates whether to generate page numbers.  Default: -"
   say "      -l{+|-}      indicates whether to generate next/prev links.  Default: +"
   say "      -bleft,right indicates the images to use for next/prev links."
   say "                   Default: l_hand.gif,r_hand.gif"
   say
   say "This program reads base files containing HTML, and generates new HTML"
   say "files based on them.  The output files will be the same name as the"
   say "input files, but with an .htm extension.  A common trailer can"
   say "be specified, or each file can contain appropriate closing HTML,"
   say "which should be everything from </body> to </html>."
   say
   say "In addition, a separate file named 'toc.htm' will be generated as"
   say "the table of contents for these files."

   exit
